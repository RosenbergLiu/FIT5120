@inject IConfiguration configration
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

@page "/iteration2/recipes"
<PageTitle>Recipes</PageTitle>

<div id="recipes" >

    <RadzenRow Style="height: 10rem" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
        <RadzenColumn Size="2" Style="text-align: center">
            <RadzenButton ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.Large" Variant="Variant.Text" Click="GoBack">
                <RadzenText TextStyle="TextStyle.H4">Back</RadzenText>
            </RadzenButton>
        </RadzenColumn>
        <RadzenColumn Size="8" Style="text-align: center">
            <RadzenText TextStyle="TextStyle.H3">Food Recipes Hub</RadzenText>
        </RadzenColumn>
        <RadzenColumn Size="2"></RadzenColumn>
    </RadzenRow>

    <RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" >
        <RadzenColumn Size="8" Style="background-color: #90e0ef; border-radius: 2rem">
            <RadzenRow Style="margin: 2rem">
                @if (ingredientsList.Count > 0)
                {
                    foreach (var item in ingredientsList)
                    {
                        <RadzenCard>
                            @item.IngredientName
                            <RadzenButton Icon="close" Variant="Variant.Text" Click="@(args => Delete(item))"></RadzenButton>
                        </RadzenCard>
                    }
                }
            </RadzenRow>
            <RadzenTemplateForm Data="@searchViewModel" Submit="@((SearchViewModel args) => { Search(args); })">
                <RadzenRow JustifyContent="Radzen.JustifyContent.Center" AlignItems="Radzen.AlignItems.Center" Style="height:4rem" Gap="2rem">
                    <RadzenLabel>
                        <RadzenText TextStyle="TextStyle.H5">Search Ingredient</RadzenText>
                    </RadzenLabel>
                    <RadzenTextBox @bind-Value="searchViewModel.IngredientInput" Style="width: 30vh"></RadzenTextBox>
                    <RadzenButton Icon="search" IsBusy="@isSearching" BusyText="Searching ..." Variant="Variant.Flat" ButtonType="ButtonType.Submit" Text="Search" Size="Radzen.ButtonSize.Medium"></RadzenButton>
                </RadzenRow>
            </RadzenTemplateForm>
            <RadzenRow Style="margin: 2rem">
                @if (ingredientsResult.Count > 0)
                {
                    foreach (var item in ingredientsResult)
                    {
                        <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.ExtraSmall" Click="@(args => Add(item))" Text="@item.IngredientName" Icon="add"></RadzenButton>
                    }
                }
            </RadzenRow>

        </RadzenColumn>
    </RadzenRow>

    <RadzenButton Click="SearchRecipesAsync">Search Recipes</RadzenButton>
    
    <RadzenRow Style="margin-left: 60px; margin-right:60px; margin-top: 30px" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
        @if (!isLoading)
        {
            <RadzenDataList AllowVirtualization="false" WrapItems="true" AllowPaging="true"
                            Data="@recipesDetailedResult" TItem="RecipeDetailModel" PagerHorizontalAlign="HorizontalAlign.Center" ShowPagingSummary="true">
                <Template Context="recipe">
                    <RadzenCard Style="width: 15rem">
                        <a href="@recipe.SourceUrl" target="_blank">
                            <RadzenImage Path="@recipe.Image" Style="width: 15rem;" />
                        </a>
                        <a href="@recipe.SourceUrl" target="_blank">@recipe.Title</a>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        }
        else
        {
            <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
                <Template>Wait</Template>
            </RadzenProgressBarCircular>
        }
    </RadzenRow>

</div>

@code{
    private void GoBack()
    {
        navigationManager.NavigateTo("/iteration2");
    }
}