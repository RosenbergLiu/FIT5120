@page "/Reminder"
@using Syncfusion.EJ2
@model FoodSaver.Pages.ReminderModel
@{
    ViewData["Title"] = "Expire Reminder";
}


<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex align-items-center">
    <div class="container">
        <div class="header-container d-flex align-items-center justify-content-between">
            <div class="logo">
                <h1 class="text-light"><a href="/"><span>Food Saver</span></a></h1>
                <!-- Uncomment below if you prefer to use an image logo -->
                <!-- <a href="index.html"><img src="assets/img/logo.png" alt="" class="img-fluid"></a>-->
            </div>

            <nav id="navbar" class="navbar" style="margin-right: 5rem">
                <ul>
                    <li><a class="nav-link" href="/">Home</a></li>
                    <li><a class="nav-link" href="/Donation">Donation Points</a></li>
                    <li><a class="nav-link active" href="/Reminder">Expiry Reminder</a></li>
                    <li><a class="nav-link" href="/Recipes">Recipes Hub</a></li>
                    <li><a class="nav-link" href="/Planner">Meal Planner</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->

        </div><!-- End Header Container -->
    </div>
</header><!-- End Header -->

<main id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
        <div class="container">

            <div class="d-flex justify-content-between align-items-center">
                <h2>Expiry Reminder</h2>
                <ol>
                    <li><a href="/">Home</a></li>
                    <li>Expiry Reminder</li>
                </ol>
            </div>

        </div>
    </section><!-- End Breadcrumbs -->
</main>


<section class="contact">
    <div class="container">
        <div class="row">
            <div class="col-lg-4" data-aos="fade-right">
                <div class="section-title">
                    <h2>Reminder</h2>
                    <p>Create a reminder to reminder you before the food product expires. You can add the reminder to your prefered calender provider.</p>
                </div>
            </div>

            <div class="col-lg-8" data-aos="fade-up" data-aos-delay="100">
                <form method="post" asp-page-handler="Download" role="form" class="shadow-form mt-4">
                    
                    <div class="row">
                        <div class="col-md-10 form-group mt-3">
                            <input type="text" class="form-control" id="productName" placeholder="Type of scan the Product Name" asp-for="ProductName" required>
                        </div>
                        <div class="col-md-2 form-group mt-3">
                            <button type="button" class="green-btn" id="captureName" data-bs-toggle="modal" data-bs-target="#captureDialog" onclick="accessCamera()"><i class="bi bi-camera"></i></button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10 form-group mt-3">
                            <input type="date" class="form-control" id="expireDate" placeholder="Type or scan the Best Before" asp-for="ProductDate" required>
                        </div>
                    </div>
                    <div class="text-center mt-3">
                        <button type="submit">Create Reminder</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Dialog -->
<div class="modal fade" id="captureDialog" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="captureDialogLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="captureDialogLabel">Capture the text</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <video id="cameraFeed" autoplay style="width: 100%"></video>
                <canvas id="imageCapture" style="display:none;"></canvas>
            </div>
            <div class="modal-footer">
                <button type="button" class="green-btn" style="background-color:gray !important" data-bs-dismiss="modal">Close</button>
                <button type="button" class="green-btn" id="captureImage" data-bs-dismiss="modal">Capture</button>
            </div>
        </div>
    </div>
</div>

<script>
    const video = document.getElementById('cameraFeed');
    const canvas = document.getElementById('imageCapture');
    const captureBtn = document.getElementById('captureImage');

    // Access the camera
    function accessCamera() {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                video.srcObject = stream;
                video.play();
            }).catch(function (err) {
                console.error("Error accessing the camera", err);
            });
        }
    }

    // Capture the image
    captureBtn.addEventListener('click', function () {
        const videoElement = document.getElementById('cameraFeed');
        const canvasElement = document.getElementById('imageCapture');
        const ctx = canvasElement.getContext("2d");

        if (videoElement.readyState === videoElement.HAVE_ENOUGH_DATA) {
            canvasElement.width = videoElement.videoWidth;
            canvasElement.height = videoElement.videoHeight;
            ctx.drawImage(videoElement, 0, 0, videoElement.videoWidth, videoElement.videoHeight);

            const imageDataUrl = canvasElement.toDataURL("image/png").split(",")[1];

            AnalyzeFrame(imageDataUrl).then((result) => {
                if (result !== null & result !== "") {

                    document.getElementById('productName').value = result;
                } else {
                    alert("Fail to capture text or result is empty");
                }
            });
        }
        const tracks = video.srcObject.getTracks();
        tracks.forEach(track => track.stop());
        video.srcObject = null;
    });

</script>
